@model Repository.MainSale
@{
    ViewBag.Title = "SalesItem";
}

<script src="~/Scripts/ApplicationJS/POS_Sales/Sales.js"></script>

@using (@Html.BeginForm())
{
    <div class="FormName">Sales Item</div>
    <div class="MainDiv">
        <div class="LeftPart">
           @* <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.sale.SalesDate, "Sales Date")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.sale.SalesDate)
                </div>
            </div>*@
            
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.customer.CustomerID, "Customer Name")
                </div>
                <div>
                    @Html.DropDownListFor(m => m.customer.CustomerID, (SelectList)ViewData["VdListCustomer"], "--------Choose Customer-----------", new { @class = "required" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.customer.ContactPerson, "Contact No.")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.customer.ContactPerson)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.customer.Address)
                </div>
                <div>
                    @Html.TextBoxFor(m => m.customer.Address)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.productInfo.ProductName, "Product Name")
                </div>
                <div>
                    @Html.DropDownListFor(m => m.productInfo.ProductName, (SelectList)ViewData["VdListProduct"], "--------Choose Product---------")
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.productInfo.ProductCode, "Product Code")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.productInfo.ProductCode)
                </div>
            </div>
           
           
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.productInfo.RegularMRP, " Price")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.productInfo.RegularMRP)
                </div>
            </div>
            
            @*<div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.Stock, "Stock")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.Stock)
                </div>
            </div>*@
            
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.Quantity, "Quantity")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.Quantity)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.Total, "Total")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.Total)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.Discount, "Discount(%)")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.Discount)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.TotalDiscount, "Total Discount")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.TotalDiscount)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.RemainingTotal, "Remaining Total")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.RemainingTotal)
                </div>
            </div>
           
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.VAT, "VAT(%)")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.VAT)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.TotalVAT, "TotalVAT")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.TotalVAT)
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.TotalPrice, "Total Price")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.TotalPrice)
                </div>
            </div>
            
            <div class="CustombuttonTwoParts">
                <input class="ac-inputs ui-button ui-widget ui-state-default ui-corner-all" type="button"
                    value="Add" id="btnAdd" />
            </div>
            <table id="tblProduct">
                <th>S/L</th>
                <th>Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Edit</th>
                <th>Delete</th>
            </table>
            <div id="divProductPager"></div>
        </div>
        <div class="RightPart">
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.paymentType.PaymentTypeID, "Payment Mode")
                </div>
                <div>
                    @Html.DropDownListFor(m => m.paymentType.PaymentTypeID, (SelectList)ViewData["VdListPaymentMode"], "--------Choose Payment Mode---------")
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.accChequePayment.BankID, "Bank Name")
                </div>
                <div>
                    @Html.DropDownListFor(m => m.accChequePayment.BankID, (SelectList)ViewData["VdBankList"], "--------Choose Bank-----------", new { @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.accChequePayment.BranchID, "Branch Name")
                </div>
                <div>
                    @Html.DropDownListFor(m => m.accChequePayment.BranchID, (SelectList)ViewData["VdBranchList"], "--------Choose Branch-----------", new { @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.accChequePayment.ChequeNo, "Cheque No")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.accChequePayment.ChequeNo, new { @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.accChequePayment.Issue_Date, "Issue Date ")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.accChequePayment.Issue_Date, new { @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.accChequePayment.Cheque_Amount, "Amount")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.accChequePayment.Cheque_Amount, new { @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.accChequePayment.MaturityDate, "Maturity Date")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.accChequePayment.MaturityDate, new { @Disabled = "true" })
                </div>
            </div>
            <div class="CustombuttonTwoParts">
                <input class="ac-inputs ui-button ui-widget ui-state-default ui-corner-all" type="button"
                    disabled="disabled" value="Add" id="btnAddChequePayment" />
            </div>
            <table id="tblAccChequePayment">
                <th>S/L</th>
                <th>Bank</th>
                <th>Branch</th>
                <th>Cheque No</th>
                <th>Cheque Amount</th>
                <th>Edit</th>
                <th>Delete</th>
            </table>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.SubTotal, "SubTotal")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.SubTotal, new { @Value = "0.00", @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.PreviousDue, "Previous Due")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.PreviousDue, new { @Value = "0.00", @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.AmountPayable, "AmountPayable")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.AmountPayable, new { @Value = "0.00", @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.PaidByCash, "Paid ByCash")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.PaidByCash, new { @Value = "0.00" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.PaidByCheque, "Paid ByCheque")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.PaidByCheque, new { @Value = "0.00", @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.AmountPaid, "Amount Paid")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.AmountPaid, new { @Value = "0.00", @Disabled = "true" })
                </div>
            </div>
            <div class="LeftRow">
                <div class="LeftColumn">
                    @Html.LabelFor(m => m.BalanceDue, "Balance Due")
                </div>
                <div>
                    @Html.TextBoxFor(m => m.BalanceDue, new { @Value = "0.00", @Disabled = "true" })
                </div>
            </div>
        </div>
    </div> 
    <div class="CustombuttonTwoParts">
        <input class="ac-inputs ui-button ui-widget ui-state-default ui-corner-all" type="button"
            value="Save" id="btnSave" />
        <input class="ac-inputs ui-button ui-widget ui-state-default ui-corner-all" type="button"
            value="Update" id="btnUpdate" />
    </div>   

}

